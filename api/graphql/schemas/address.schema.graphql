scalar UUID
scalar DateTime
scalar PostalCode

type Query {
  address(id: UUID!): Address
  addresses(userId: UUID!): [Address!]!
  allAddresses: [Address!]!
}

type Mutation {
  createAddress(data: CreateAddress!): Address
  updateAddress(id: UUID!, data: UpdateAddress!): Address
  deleteAddress(id: UUID!): UUID
}

type Address {
  id: UUID!
  streetName: String!
  streetNumber: String!
  postalCode: PostalCode!
  city: String!
  area: String!
  locality: String!
  country: String!
  createdAt: DateTime!
  user: User!
  orders: [Order!]!
}

input CreateAddress {
  id: UUID
  streetName: String!
  streetNumber: String!
  postalCode: PostalCode!
  city: String!
  area: String!
  locality: String!
  country: String!
  userId: UUID!
}

input UpdateAddress {
  streetName: String
  streetNumber: String
  postalCode: PostalCode
  city: String
  area: String
  locality: String
  country: String
}
