scalar UUID
scalar DateTime

type Query {
  paymentMethod(id: UUID!): PaymentMethod
  paymentMethods(userId: UUID!): [PaymentMethod!]!
  allPaymentMethods: [PaymentMethod!]!
}

type Mutation {
  createPaymentMethod(data: CreatePaymentMethod!): PaymentMethod
  updatePaymentMethod(id: UUID!, data: UpdatePaymentMethod!): PaymentMethod
  deletePaymentMethod(id: UUID!): UUID
}

type PaymentMethod {
  id: UUID!
  alias: String!
  cardholderName: String!
  number: String!
  last4: String!
  network: String!
  expiryMonth: Int!
  expiryYear: Int!
  cvv: String!
  createdAt: DateTime!
  user: User!
}

input CreatePaymentMethod {
  id: UUID
  alias: String!
  cardholderName: String!
  number: String!
  last4: String!
  network: String!
  expiryMonth: Int!
  expiryYear: Int!
  cvv: String!
  userId: UUID!
}

input UpdatePaymentMethod {
  alias: String
}
